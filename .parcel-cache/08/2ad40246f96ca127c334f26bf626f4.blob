"use strict";

var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _react = _interopRequireWildcard(require("react"));

  require("./paragraphChapter.css");

  var _pagination = _interopRequireDefault(require("./pagination"));

  var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

  var _index = require("../helpers/index.js");

  var _ulkolinja_logo_pieni = _interopRequireDefault(require("../images/ulkolinja_logo_pieni.png"));

  var _constants = require("../helpers/constants.js");

  var _gridContext = _interopRequireDefault(require("../helpers/gridContext"));

  var _s3 = $RefreshSig$();

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

  function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  var Content = function Content(_ref) {
    var plainText = _ref.plainText,
        index = _ref.index,
        credits = _ref.credits,
        bottom = _ref.bottom,
        text = _ref.text,
        time = _ref.time;
    return _react.default.createElement("div", {
      className: "swiper-text ".concat(plainText ? "plaintext" : "chapter")
    }, _react.default.createElement(_pagination.default, {
      splitScreen: true,
      index: index
    }), _react.default.createElement("div", {
      className: plainText ? "plaintext-container ".concat(credits ? "chapter-credits" : "") : "chapter-container ".concat(bottom ? "chapter-bottom" : "")
    }, false && _react.default.createElement("p", null, time), _react.default.createElement(_reactMarkdown.default, {
      linkTarget: "_blank",
      source: text
    })));
  };

  _c = Content;

  var ParagraphChapter = function ParagraphChapter(_ref2) {
    _s3();

    var _s2 = $RefreshSig$();

    var credits = _ref2.credits,
        plainText = _ref2.plainText,
        index = _ref2.index,
        bottom = _ref2.bottom,
        center = _ref2.center,
        text_location = _ref2.text_location,
        text = _ref2.text,
        time = _ref2.time,
        credits_eng = _ref2.credits_eng,
        text_eng = _ref2.text_eng;

    var _useWindowSize = (0, _index.useWindowSize)(),
        _useWindowSize2 = _slicedToArray(_useWindowSize, 2),
        width = _useWindowSize2[0],
        height = _useWindowSize2[1];

    var thirdRowRef = (0, _react.useRef)(null);
    var GridRef = (0, _react.useRef)(null);

    var _useState = (0, _react.useState)(33),
        _useState2 = _slicedToArray(_useState, 2),
        thirdRowHeight = _useState2[0],
        setThirdRowHeight = _useState2[1];

    var _useState3 = (0, _react.useState)(0),
        _useState4 = _slicedToArray(_useState3, 2),
        gridHeight = _useState4[0],
        setGridHeight = _useState4[1];

    (0, _react.useEffect)(function () {
      console.log(thirdRowHeight);
    }, [thirdRowHeight]);

    var position = function position() {
      if (bottom && width <= _constants.desktopBreakpointWidth) return "swiper-position-bottom";
      if (center || width >= _constants.desktopBreakpointWidth) return "swiper-position-center";
    };

    var whichValue = function whichValue() {
      _s2();

      var value = parseInt((0, _react.useContext)(_gridContext.default).gridValues[index], 10);
      if (isNaN(value)) return parseInt(text_location, 10);else return value;
    };

    _s2(whichValue, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");

    var language = (0, _react.useContext)(_index.LanguageContext);
    var location = whichValue();

    if (language === "eng") {
      text = text_eng;
    }

    if (!text) return null;
    return _react.default.createElement("div", {
      className: "".concat(position())
    }, !credits && width > 1025 && _react.default.createElement("div", {
      className: "desktop-grid",
      ref: function ref(el) {
        if (!el || !el.clientHeight) return;
        setGridHeight(el.clientHeight);
      }
    }, _react.default.createElement("div", {
      className: "desktop-grid-row row-upper",
      style: {
        height: "".concat((100 - thirdRowHeight) / 2, "%")
      }
    }, _toConsumableArray(Array(3).keys()).map(function (e, i) {
      return _react.default.createElement("div", {
        className: "desktop-grid-cell",
        style: {
          visibility: i === location ? "visible" : "hidden",
          width: i === location ? "40%" : "30%"
        }
      }, i === location && _react.default.createElement("div", {
        className: "desktop-grid-cell-content"
      }, _react.default.createElement(_reactMarkdown.default, {
        linkTarget: "_blank",
        source: text
      })));
    })), _react.default.createElement("div", {
      className: "desktop-grid-row row-middle",
      style: {
        height: "".concat((100 - thirdRowHeight) / 2, "%")
      }
    }, _toConsumableArray(Array(3).keys()).map(function (e, i) {
      return _react.default.createElement("div", {
        className: "desktop-grid-cell",
        style: {
          visibility: i + 3 === location ? "visible" : "hidden",
          width: i + 3 === location ? "40%" : "30%"
        }
      }, i + 3 === location && _react.default.createElement("div", {
        className: "desktop-grid-cell-content"
      }, _react.default.createElement(_reactMarkdown.default, {
        linkTarget: "_blank",
        source: text
      })));
    })), _react.default.createElement("div", {
      className: "desktop-grid-row row-lower",
      style: {
        height: "".concat(thirdRowHeight, "%")
      }
    }, _toConsumableArray(Array(3).keys()).map(function (e, i) {
      return _react.default.createElement("div", {
        className: "desktop-grid-cell",
        style: {
          visibility: i + 6 === location ? "visible" : "hidden",
          width: i + 6 === location ? "40%" : "30%"
        }
      }, i + 6 === location && _react.default.createElement("div", {
        ref: function ref(el) {
          if (!el || !el.clientHeight) return;
          console.log("as");
          setThirdRowHeight(el.clientHeight / gridHeight * 100);
        },
        className: "desktop-grid-cell-content"
      }, _react.default.createElement(_reactMarkdown.default, {
        linkTarget: "_blank",
        source: text
      })));
    }))), (width < 1025 || credits) && _react.default.createElement(Content, {
      plainText: plainText,
      index: index,
      credits: credits,
      bottom: bottom,
      text: text,
      time: time
    }));
  };

  _s3(ParagraphChapter, "8J0sMUMouJ1ViH684nOlwl4Ajao=", false, function () {
    return [_index.useWindowSize];
  });

  _c2 = ParagraphChapter;
  var _default = ParagraphChapter;
  exports.default = _default;

  var _c, _c2;

  $RefreshReg$(_c, "Content");
  $RefreshReg$(_c2, "ParagraphChapter");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}