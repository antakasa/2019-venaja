"use strict";

var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _index = require("../components/index.js");

  var _react = _interopRequireDefault(require("react"));

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  const determineContentType = (index, e, desktop, swiper) => {
    const {
      src,
      credits,
      text,
      time,
      type,
      bottom,
      areenaVideo,
      header1,
      subheader,
      id,
      header1_eng,
      subheader_eng,
      src_eng,
      credits_eng,
      text_location,
      text_eng
    } = e;

    if (type === 'graph') {
      return _react.default.createElement(_index.GraphImage, {
        src: src,
        src_eng: src_eng
      });
    } else if (type === 'finalPage') {
      return _react.default.createElement(_index.FinalPage, {
        swiper: swiper,
        index: index,
        areenaId: areenaVideo
      });
    } else if (type === 'cover') {
      return _react.default.createElement(_index.ParagraphCover, {
        index: index,
        desktop: desktop,
        header: header1,
        subHeader: subheader,
        header_eng: header1_eng,
        subHeader_eng: subheader_eng
      });
    } else {
      return _react.default.createElement(_index.ParagraphChapter, {
        index: index,
        text: text,
        text_eng: text_eng,
        time: time,
        text_location: text_location,
        bottom: bottom,
        plainText: type === 'text',
        credits: credits,
        credits_eng: credits_eng,
        center: true
      });
    }
  };

  var _default = determineContentType;
  exports.default = _default;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}