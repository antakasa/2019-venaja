"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.secondsToTime = void 0;

var _subs = _interopRequireDefault(require("../../subs.json"));

var _webvttParser = require("webvtt-parser");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const createSubtitleTrack = (video, id, subPath) => {
  if (!video) return;

  const subtitleParser = someVTT => {
    const parser = new _webvttParser.WebVTTParser();
    const tree = parser.parse(someVTT, 'metadata');
    return tree;
  };

  if (!id || !subPath) return;
  const matchingKey = Object.keys(_subs.default).filter(e => {
    return subPath.indexOf(e.replace('src/public', '')) >= 0;
  });
  console.log(matchingKey);
  if (matchingKey.length === 0) return;
  let parsed = subtitleParser(_subs.default[matchingKey[0]]);
  const track = video.current.addTextTrack('subtitles', 'Finnish', 'Fi');
  track.mode = 'showing';
  parsed.cues.map(e => track.addCue(new VTTCue(e.startTime, e.endTime, e.text)));
  return track;
};

const secondsToTime = secs => {
  secs = Math.round(secs);
  var hours = Math.floor(secs / (60 * 60));
  var divisor_for_minutes = secs % (60 * 60);
  var minutes = Math.floor(divisor_for_minutes / 60);
  var divisor_for_seconds = divisor_for_minutes % 60;
  var seconds = Math.ceil(divisor_for_seconds);
  var obj = {
    h: hours,
    m: minutes,
    s: ('0' + JSON.stringify(seconds)).slice(-2)
  };
  return obj;
};

exports.secondsToTime = secondsToTime;
var _default = createSubtitleTrack;
exports.default = _default;