"use strict";

var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.ProgressBar = void 0;

  var _data = require("../data");

  require("./pagination.css");

  var _react = _interopRequireDefault(require("react"));

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var ProgressBar = function ProgressBar(_ref) {
    var percentage = _ref.percentage;
    return _react.default.createElement("div", {
      className: "progress-bar"
    }, _react.default.createElement(Filler, {
      percentage: percentage
    }));
  };

  exports.ProgressBar = ProgressBar;
  _c = ProgressBar;

  var Filler = function Filler(_ref2) {
    var percentage = _ref2.percentage;
    return _react.default.createElement("div", {
      className: "filler",
      style: {
        width: "".concat(percentage, "%")
      }
    });
  };

  _c2 = Filler;

  var Pagination = function Pagination(_ref3) {
    var index = _ref3.index,
        splitScreen = _ref3.splitScreen;

    var cssClasses = function cssClasses() {
      if (!splitScreen) {
        return 'pagination full-screen-pagination';
      } else if (splitScreen) {
        return 'pagination split-screen-pagination';
      } else {
        return 'pagination';
      }
    };

    if (index === 0) return null;

    var notVisible = function notVisible() {
      var slide = _data.data[index];
      var testBooleans = [slide.type === 'finalPage', slide.credits];

      if (testBooleans.indexOf(true) >= 0) {
        return true;
      } else return false;
    };

    return _react.default.createElement("div", {
      className: cssClasses()
    }, _react.default.createElement("div", {
      style: {
        width: '90%',
        height: '12px',
        visibility: notVisible() ? 'hidden' : ''
      }
    }, _react.default.createElement(ProgressBar, {
      percentage: index / (_data.data.length - 1) * 100
    })));
  }; //<div>{JSON.stringify(index) + '/' + JSON.stringify(data.length)}</div>


  _c3 = Pagination;
  var _default = Pagination;
  exports.default = _default;

  var _c, _c2, _c3;

  $RefreshReg$(_c, "ProgressBar");
  $RefreshReg$(_c2, "Filler");
  $RefreshReg$(_c3, "Pagination");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}