"use strict";

var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _react = _interopRequireWildcard(require("react"));

  require("./areenaClip.css");

  var _s2 = $RefreshSig$();

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

  function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

  var AreenaClip = function AreenaClip(_ref) {
    _s2();

    var id = _ref.id,
        renderNow = _ref.renderNow;
    var player = (0, _react.useRef)(null);

    var _useState = (0, _react.useState)(false),
        _useState2 = _slicedToArray(_useState, 2),
        rendered = _useState2[0],
        registerRender = _useState2[1];

    var render = function render() {
      var _window = window,
          yleVisualisation = _window.yleVisualisation;
      var embedYlePlayer = yleVisualisation ? yleVisualisation.embedYlePlayer : window.embedYlePlayer;

      if (embedYlePlayer) {
        embedYlePlayer(player.current, id, {
          playFullScreen: true
        });
      }
    };

    (0, _react.useEffect)(function () {
      if (renderNow && !rendered) {
        console.log('render areena player');
        registerRender(true);
        render();
      }
    }, [renderNow]);
    return _react.default.createElement("div", {
      className: "yo-areena-player",
      ref: player
    });
  };

  _s2(AreenaClip, "MzFIjBSnwJStLJaWMoLC+8547Pc=");

  _c = AreenaClip;
  var _default = AreenaClip;
  exports.default = _default;

  var _c;

  $RefreshReg$(_c, "AreenaClip");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}