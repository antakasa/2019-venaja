"use strict";

var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _react = _interopRequireDefault(require("react"));

  var _index = require("../helpers/index.js");

  var _index2 = require("./index.js");

  var _constants = require("../helpers/constants.js");

  var _s = $RefreshSig$();

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  const SlideContainer = ({
    e,
    triggerCoverLoaded,
    goPrev,
    index,
    goNext,
    swiper,
    prevClickAvailable,
    nextClickAvailable
  }) => {
    _s();

    const [width, height] = (0, _index.useWindowSize)();
    const isDesktop = width >= _constants.desktopBreakpointWidth;
    return _react.default.createElement("div", {
      style: {
        height: '100%',
        background: e.type === "graph" ? "black" : "unset"
      }
    }, width < _constants.desktopBreakpointWidth && _react.default.createElement(_react.default.Fragment, null, prevClickAvailable && _react.default.createElement("div", {
      onClick: goPrev,
      id: "prev-catch"
    }), nextClickAvailable && _react.default.createElement("div", {
      onClick: goNext,
      id: "next-catch"
    })), (0, _index.determineBackgroundType)(e, isDesktop, triggerCoverLoaded), (0, _index.determineContentType)(index, e, isDesktop, swiper), _react.default.createElement(_index2.Arrows, {
      type: e.type,
      desktop: isDesktop,
      index: index
    }));
  };

  _s(SlideContainer, "JSkVnn8OB/Vg/xXlIdwYFeoMO8c=", false, function () {
    return [_index.useWindowSize];
  });

  _c = SlideContainer;
  var _default = SlideContainer;
  exports.default = _default;

  var _c;

  $RefreshReg$(_c, "SlideContainer");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}